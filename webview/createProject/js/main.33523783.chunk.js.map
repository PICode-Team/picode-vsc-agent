{"version":3,"sources":["styles.ts","default.tsx","optional.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createProjectStyle","makeStyles","createStyles","wrapper","width","height","minHeight","backgroundColor","borderRadius","root","padding","header","fontSize","color","content","maxHeight","title","paddingTop","selectContent","cursor","typeContent","typeNode","display","minWidth","alignItems","background","transition","paddingLeft","buttonBox","justifyContent","button","marginTop","marginLeft","border","inputContent","marginBottom","lineHeight","fontFamily","resize","imageUpload","DefualtInput","classes","setDefualtInput","defaultInput","type","React","useState","upload","setUpload","imageName","setImageName","fileButton","useRef","fileDrop","e","a","preventDefault","undefined","files","dataTransfer","name","formData","FormData","append","fetch","method","body","then","res","json","result","code","projectThumbnail","uploadFileId","className","placeholder","onChange","projectName","target","value","rows","projectDescription","onDragOver","onDragEnter","onDragLeave","onDrop","onClick","current","click","style","textAlign","pointerEvents","id","ref","tmpImage","projectParticipants","OptionalInput","setSource","source","fileeName","setFileName","tmpSource","gitUrl","checked","isExtract","cloneDeep","currentTarget","verticalAlign","App","setType","useEffect","submitData","resultInputData","split","payload","projectInfo","mode","headers","JSON","stringify","window","location","href","CreateNewFolder","GitHub","Publish","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33523783.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\r\nimport createStyles from \"@material-ui/styles/createStyles\";\r\n\r\nexport const createProjectStyle = makeStyles(() =>\r\n  createStyles({\r\n    wrapper: {\r\n      width: \"100%\",\r\n      height: \"fit-content\",\r\n      minHeight: \"100%\",\r\n      backgroundColor: \"#192428\",\r\n      \"& *::-webkit-scrollbar\": {\r\n        height: \"10px\",\r\n        width: \"8px\",\r\n        backgroundColor: \"#1e1e2f\",\r\n      },\r\n      \"& *::-webkit-scrollbar-thumb\": {\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"#555\",\r\n      },\r\n      \"& *::-webkit-scrollbar-track\": {\r\n        borderRadius: \"10px\",\r\n        backgroundColor: \"#1e1e2f\",\r\n      },\r\n    },\r\n    root: {\r\n      height: \"100%\",\r\n      padding: \"32px\",\r\n    },\r\n    header: {\r\n      width: \"100%\",\r\n      fontSize: \"30px\",\r\n      color: \"#f6f6f6\",\r\n    },\r\n    content: {\r\n      width: \"100%\",\r\n      height: \"fit-content\",\r\n      maxHeight: \"100%\",\r\n    },\r\n    title: {\r\n      width: \"100%\",\r\n      paddingTop: \"24px\",\r\n      fontSize: \"24px\",\r\n      color: \"#eaeaea\",\r\n    },\r\n    selectContent: {\r\n      width: \"33%\",\r\n      paddingTop: \"16px\",\r\n      height: \"100%\",\r\n      cursor: \"pointer\",\r\n    },\r\n    typeContent: {\r\n      width: \"100%\",\r\n      height: \"fit-content\",\r\n    },\r\n    typeNode: {\r\n      width: \"100%\",\r\n      height: \"70px\",\r\n      display: \"flex\",\r\n      minWidth: \"242px\",\r\n      alignItems: \"center\",\r\n      padding: \"16px\",\r\n      color: \"#eaeaea\",\r\n      background: \"#414C50\",\r\n      \"&:hover\": {\r\n        background: \"#515C60\",\r\n        transition: \"all 0.3s\",\r\n        color: \"#D5D5D5\",\r\n      },\r\n      \"&>span\": {\r\n        paddingLeft: \"12px\",\r\n      },\r\n    },\r\n    buttonBox: {\r\n      display: \"flex\",\r\n      width: \"500px\",\r\n      justifyContent: \"flex-end\",\r\n    },\r\n    button: {\r\n      width: \"100px\",\r\n      marginTop: \"6px\",\r\n      marginLeft: \"12px\",\r\n      height: \"32px\",\r\n      color: \"#f6f6f6\",\r\n      fontSize: \"12px\",\r\n      borderRadius: \"2px\",\r\n      border: `1px solid \"#D5D5D5\"`,\r\n      background: \"#414C50\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      cursor: \"pointer\",\r\n      \"&:hover\": {\r\n        background: \"#515C60\",\r\n        transition: \"all 0.3s\",\r\n      },\r\n    },\r\n    inputContent: {\r\n      width: \"500px\",\r\n      paddingTop: \"16px\",\r\n      \"&>input\": {\r\n        width: \"100%\",\r\n        background: \"inherit\",\r\n        marginTop: \"4px\",\r\n        paddingLeft: \"4px\",\r\n        border: `1px solid \"#D5D5D5\"`,\r\n        borderRadius: \"2px\",\r\n        color: \"#f6f6f6\",\r\n        marginBottom: \"12px\",\r\n        height: \"32px\",\r\n        lineHeight: \"32px\",\r\n      },\r\n      \"&>textarea\": {\r\n        width: \"100%\",\r\n        background: \"inherit\",\r\n        marginTop: \"4px\",\r\n        paddingLeft: \"4px\",\r\n        border: `1px solid \"#D5D5D5\"`,\r\n        borderRadius: \"2px\",\r\n        color: \"#f6f6f6\",\r\n        marginBottom: \"14px\",\r\n        lineHeight: \"17px\",\r\n        fontFamily: \"Arial\",\r\n        resize: \"none\",\r\n      },\r\n      \"&>span\": {\r\n        color: \"#f6f6f6\",\r\n        fontSize: \"12px\",\r\n      },\r\n      \"&>div\": {\r\n        color: \"#f6f6f6\",\r\n        fontSize: \"12px\",\r\n      },\r\n    },\r\n    imageUpload: {\r\n      height: \"150px\",\r\n      width: \"100%\",\r\n      marginTop: \"4px\",\r\n      marginBottom: \"14px\",\r\n      border: `1px solid \"#D5D5D5\"`,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      color: \"#f6f6f6\",\r\n    },\r\n  })\r\n);\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport InsertPhotoIcon from \"@material-ui/icons/InsertPhoto\";\r\n\r\nexport const DefualtInput = ({\r\n  classes,\r\n  setDefualtInput,\r\n  defaultInput,\r\n  type,\r\n}: any) => {\r\n  const [upload, setUpload] = React.useState<boolean>(false);\r\n  const [imageName, setImageName] = React.useState<string>(\"\");\r\n\r\n  const fileButton = useRef<any>(null);\r\n\r\n  const dragOver = (e: any) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const dragEnter = (e: any) => {\r\n    e.preventDefault();\r\n    setUpload(true);\r\n  };\r\n\r\n  const dragLeave = (e: any) => {\r\n    e.preventDefault();\r\n    setUpload(false);\r\n  };\r\n\r\n  const fileDrop = async (e: any) => {\r\n    e.preventDefault();\r\n    const files = e.dataTransfer.files;\r\n    if (files !== undefined) {\r\n      setImageName(files[0].name);\r\n      let formData = new FormData();\r\n      formData.append(\"uploadFile\", files[0]);\r\n      let result = await fetch(`http://localhost:8000/api/data`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      }).then((res) => res.json());\r\n      if (result.code === 200) {\r\n        setDefualtInput({\r\n          ...defaultInput,\r\n          projectThumbnail: result.uploadFileId,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <div className={classes.title}>Write Information of project</div>\r\n      <div className={classes.inputContent}>\r\n        <span>Project ID</span>\r\n        <input\r\n          placeholder=\"Input Project Name\"\r\n          onChange={(e) => {\r\n            setDefualtInput({ ...defaultInput, projectName: e.target.value });\r\n          }}\r\n          value={defaultInput.projectName}\r\n        />\r\n        <span>Project Description</span>\r\n        <textarea\r\n          rows={10}\r\n          placeholder=\"Input Project Description\"\r\n          onChange={(e) => {\r\n            setDefualtInput({\r\n              ...defaultInput,\r\n              projectDescription: e.target.value,\r\n            });\r\n          }}\r\n          value={defaultInput.projectDescription}\r\n        />\r\n        <span>Project Thumbnail</span>\r\n        <div\r\n          className={classes.imageUpload}\r\n          onDragOver={dragOver}\r\n          onDragEnter={dragEnter}\r\n          onDragLeave={dragLeave}\r\n          onDrop={fileDrop}\r\n          onClick={() => fileButton.current.click()}\r\n        >\r\n          {upload ? (\r\n            <div style={{ textAlign: \"center\", pointerEvents: \"none\" }}>\r\n              <InsertPhotoIcon style={{ width: \"40px\", height: \"40px\" }} />\r\n              <br />\r\n              <span>{imageName !== \"\" ? imageName : \"Drop Image\"}</span>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <CloudUploadIcon style={{ width: \"40px\", height: \"40px\" }} />\r\n                <br />\r\n                <span>\r\n                  {type === \"edit\"\r\n                    ? \"If you want change iamge, upload image\"\r\n                    : \"Drag and Drop Image or Click to upload Image\"}\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <input\r\n          type=\"file\"\r\n          id=\"getFile\"\r\n          style={{ display: \"none\" }}\r\n          ref={fileButton}\r\n          onChange={async (e) => {\r\n            let tmpImage = e.target.files;\r\n            if (tmpImage !== null) {\r\n              let formData = new FormData();\r\n              formData.append(\"uploadFile\", tmpImage[0]);\r\n              let result = await fetch(`http://localhost:8000/api/data`, {\r\n                method: \"POST\",\r\n                body: formData,\r\n              }).then((res) => res.json());\r\n              if (result.code === 200) {\r\n                setUpload(true);\r\n                setImageName(tmpImage[0].name);\r\n                setDefualtInput({\r\n                  ...defaultInput,\r\n                  projectThumbnail: result.uploadFileId,\r\n                });\r\n              }\r\n            }\r\n          }}\r\n        />\r\n        <span>Project Participant</span>\r\n        <input\r\n          placeholder=\"Input project Participane ex)test1,test2,test3... \"\r\n          value={defaultInput.projectParticipants}\r\n          onChange={(e) => {\r\n            setDefualtInput({\r\n              ...defaultInput,\r\n              projectParticipants: e.target.value,\r\n            });\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport InsertPhotoIcon from \"@material-ui/icons/InsertPhoto\";\r\n\r\nexport const OptionalInput = ({ type, classes, setSource, source }: any) => {\r\n  const [upload, setUpload] = React.useState<boolean>(false);\r\n  const [fileeName, setFileName] = React.useState<string>(\"\");\r\n\r\n  const fileButton = useRef<any>(null);\r\n\r\n  const dragOver = (e: any) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const dragEnter = (e: any) => {\r\n    e.preventDefault();\r\n    setUpload(true);\r\n  };\r\n\r\n  const dragLeave = (e: any) => {\r\n    e.preventDefault();\r\n    setUpload(false);\r\n  };\r\n\r\n  const fileDrop = async (e: any) => {\r\n    e.preventDefault();\r\n    const files = e.dataTransfer.files;\r\n    if (files !== undefined) {\r\n      setFileName(files[0].name);\r\n      let formData = new FormData();\r\n      formData.append(\"uploadFile\", files[0]);\r\n      let result = await fetch(`http://localhost:8000/api/data`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      }).then((res) => res.json());\r\n      if (result.code === 200) {\r\n        let tmpSource = source;\r\n        tmpSource.upload.uploadFileId = result.uploadFileId;\r\n        setSource(tmpSource);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (type === \"git\") {\r\n    return (\r\n      <>\r\n        <div className={classes.title}>Input Optional info about git</div>\r\n        <div className={classes.inputContent}>\r\n          <span>Project ID</span>\r\n          <input\r\n            placeholder=\"Input Github Url\"\r\n            onChange={(e) => {\r\n              setSource({ ...source, gitUrl: e.target.value });\r\n            }}\r\n            value={source === undefined ? \"\" : source.gitUrl}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  } else if (type === \"upload\") {\r\n    return (\r\n      <>\r\n        <div className={classes.title}>Input Optional info about Upload</div>\r\n        <div className={classes.inputContent}>\r\n          <span>Project Zip File</span>\r\n          <div\r\n            className={classes.imageUpload}\r\n            onDragOver={dragOver}\r\n            onDragEnter={dragEnter}\r\n            onDragLeave={dragLeave}\r\n            onDrop={fileDrop}\r\n            onClick={() => fileButton.current.click()}\r\n          >\r\n            {upload ? (\r\n              <div style={{ textAlign: \"center\", pointerEvents: \"none\" }}>\r\n                <InsertPhotoIcon style={{ width: \"40px\", height: \"40px\" }} />\r\n                <br />\r\n                <span>{fileeName !== \"\" ? fileeName : \"Drop File\"}</span>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                  <CloudUploadIcon style={{ width: \"40px\", height: \"40px\" }} />\r\n                  <br />\r\n                  <span>Drag and Drop File or Click to upload File</span>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <input\r\n            ref={fileButton}\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            id=\"getFile\"\r\n            onChange={async (e) => {\r\n              let tmpImage = e.target.files;\r\n              if (tmpImage !== null) {\r\n                let formData = new FormData();\r\n                formData.append(\"uploadFile\", tmpImage[0]);\r\n                let result = await fetch(`http://localhost:8000/api/data`, {\r\n                  method: \"POST\",\r\n                  body: formData,\r\n                }).then((res) => res.json());\r\n                if (result.code === 200) {\r\n                  let tmpSource = source;\r\n                  tmpSource.upload.uploadFileId = result.uploadFileId;\r\n                  setSource(tmpSource);\r\n                }\r\n              }\r\n            }}\r\n          />\r\n          <div style={{ display: \"inline-block\" }}>\r\n            is Extract?\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={source.upload ? source.upload.isExtract : true}\r\n              onClick={(e) => {\r\n                let tmpSource = cloneDeep(source);\r\n                tmpSource.upload.isExtract = e.currentTarget.checked;\r\n                setSource(tmpSource);\r\n              }}\r\n              style={{ verticalAlign: \"middle\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n","import { useEffect, useState } from \"react\";\nimport { CreateNewFolder, Publish, GitHub } from \"@material-ui/icons/\";\nimport { createProjectStyle } from \"./styles\";\nimport { DefualtInput } from \"./default\";\nimport { OptionalInput } from \"./optional\";\n\nimport \"./App.css\";\n\ninterface TSource {\n  type: string;\n  gitUrl?: string;\n  upload?: {\n    uploadFileId?: string;\n    isExtract?: boolean;\n  };\n}\n\ninterface TProjectInfo {\n  projectName: string;\n  projectDescription: string;\n  projectThumbnail?: string;\n  projectParticipants?: any;\n}\n\ninterface TCreate {\n  projectInfo: TProjectInfo;\n  source?: TSource;\n}\n\nfunction App() {\n  const classes = createProjectStyle();\n  const [type, setType] = useState<string>(\"\");\n  const [defaultInput, setDefualtInput] = useState<TProjectInfo>({\n    projectDescription: \"\",\n    projectName: \"\",\n    projectParticipants: undefined,\n    projectThumbnail: undefined,\n  });\n  const [source, setSource] = useState<TSource>();\n\n  useEffect(() => {\n    if (type === \"git\") {\n      setSource({\n        type: \"gitUrl\",\n        gitUrl: undefined,\n      });\n    } else if (type === \"upload\") {\n      setSource({\n        type: \"upload\",\n        upload: {\n          uploadFileId: undefined,\n          isExtract: true,\n        },\n      });\n    } else {\n      setSource({\n        type: \"nothing\",\n      });\n    }\n  }, [type]);\n\n  const submitData = async () => {\n    let resultInputData: {\n      projectName: string;\n      projectDescription: string;\n      projectThumbnail?: string;\n      projectParticipants?: string[] | string;\n    } = defaultInput;\n    if (defaultInput.projectParticipants !== undefined) {\n      resultInputData.projectParticipants =\n        defaultInput.projectParticipants.split(\",\");\n    }\n\n    let payload: TCreate = {\n      projectInfo: resultInputData,\n      source: source,\n    };\n\n    let data = await fetch(`http://localhost:8000/api/project`, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(payload),\n    }).then((res) => res.json());\n\n    if (data.code === 200) {\n      window.location.href = \"/\";\n    }\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.root}>\n        <div className={classes.header}>Create Project</div>\n        {type === \"\" && (\n          <div className={classes.content}>\n            <div className={classes.title}>Select Project Type</div>\n            <div className={classes.typeContent}>\n              <div\n                className={classes.selectContent}\n                onClick={() => setType(\"defualt\")}\n              >\n                <div className={classes.typeNode}>\n                  <CreateNewFolder />\n                  <span>Create a Project</span>\n                </div>\n              </div>\n              <div\n                className={classes.selectContent}\n                onClick={() => setType(\"git\")}\n              >\n                <div className={classes.typeNode}>\n                  <GitHub />\n                  <span>Clone project in Git</span>\n                </div>\n              </div>\n              <div\n                className={classes.selectContent}\n                onClick={() => setType(\"upload\")}\n              >\n                <div className={classes.typeNode}>\n                  <Publish />\n                  <span>Upload your own Project</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {type !== \"\" && (\n          <DefualtInput\n            classes={classes}\n            setDefualtInput={setDefualtInput}\n            defaultInput={defaultInput}\n          />\n        )}\n        {type !== \"\" && (\n          <OptionalInput\n            type={type}\n            classes={classes}\n            setSource={setSource}\n            source={source}\n          />\n        )}\n        {type !== \"\" && (\n          <div className={classes.buttonBox}>\n            <div className={classes.button} onClick={() => setType(\"\")}>\n              PREV\n            </div>\n            <div className={classes.button} onClick={() => submitData()}>\n              SUBMIT\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}